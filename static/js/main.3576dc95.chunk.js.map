{"version":3,"sources":["MyUrlField.js","users.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","link","textDecoration","icon","width","paddingLeft","MyUrlField","record","source","classes","href","className","UserList","props","List","Datagrid","rowClick","TextField","EmailField","oldConsoleError","console","error","args","isOurWarning","indexOf","dataProdiver","jsonServerProvider","App","Admin","dataProvider","Resource","name","list","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VAIMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,eAAgB,QAEpBC,KAAM,CACFC,MAAO,OACPC,YAAa,KAcNC,EAVI,SAAC,GAA6B,IAAD,IAA1BC,cAA0B,MAAjB,GAAiB,EAAbC,EAAa,EAAbA,OACzBC,EAAUV,IAChB,OACI,oBAAGW,KAAMH,EAAOC,GAASG,UAAWF,EAAQR,KAA5C,UACKM,EAAOC,GACR,cAAC,IAAD,CAAYG,UAAWF,EAAQN,WCf9BS,EAAW,SAAAC,GAAK,OACzB,cAACC,EAAA,EAAD,2BAAUD,GAAV,aACI,eAACE,EAAA,EAAD,CAAUC,SAAS,OAAnB,UACI,cAACC,EAAA,EAAD,CAAWT,OAAO,OAClB,cAACS,EAAA,EAAD,CAAWT,OAAO,SAElB,cAACU,EAAA,EAAD,CAAYV,OAAO,UAEnB,cAACS,EAAA,EAAD,CAAWT,OAAO,UAElB,cAAC,EAAD,CAAYA,OAAO,YACnB,cAACS,EAAA,EAAD,CAAWT,OAAO,wB,QCT7B,WACC,IAAMW,EAAkBC,QAAQC,MAChCD,QAAQC,MAAQ,WAAoB,IAAD,uBAANC,EAAM,yBAANA,EAAM,gBACjC,IAAMC,EAAkC,kBAAZD,EAAK,IAA+B,eAAZA,EAAK,IACpC,kBAAZA,EAAK,IAA+B,gBAAZA,EAAK,IACjB,kBAAZA,EAAK,IAAmBA,EAAK,GAAGE,QAAQ,kCAAoC,EAEhFD,GACHJ,EAAe,WAAf,EAAmBG,IARxB,GAaD,IAAMG,EAAeC,YAAmB,wCAUzBC,MARf,WACE,OACE,cAACC,EAAA,EAAD,CAAOC,aAAcJ,EAArB,SACE,cAACK,EAAA,EAAD,CAAUC,KAAK,QAAQC,KAAMpB,OCZpBqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3576dc95.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\n\r\nconst useStyles = makeStyles({\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    icon: {\r\n        width: '.5em',\r\n        paddingLeft: 2\r\n    }\r\n});\r\n\r\nconst MyUrlField = ({ record = {}, source }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <a href={record[source]} className={classes.link}>\r\n            {record[source]}\r\n            <LaunchIcon className={classes.icon} />\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default MyUrlField;","import * as React from 'react';\r\nimport { List, Datagrid, TextField, EmailField } from 'react-admin';\r\nimport MyUrlField from './MyUrlField';\r\n\r\nexport const UserList = props => (\r\n    <List {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"name\" />\r\n            {/* <TextField source=\"username\" /> */}\r\n            <EmailField source=\"email\" />\r\n            {/* <TextField source=\"address.street\" /> */}\r\n            <TextField source=\"phone\" />\r\n            {/* <UrlField source=\"website\" /> */}\r\n            <MyUrlField source=\"website\" />\r\n            <TextField source=\"company.name\" />\r\n        </Datagrid>\r\n    </List>\r\n);","import * as React from 'react';\nimport { Admin, Resource } from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport { UserList } from './users';\nimport './App.css';\n\n(function () {\n  const oldConsoleError = console.error;\n  console.error = function (...args) {\n    const isOurWarning = typeof args[3] === 'string' && args[3] === 'Transition' &&\n      typeof args[1] === 'string' && args[1] === 'findDOMNode' &&\n      typeof args[0] === 'string' && args[0].indexOf('is deprecated in StrictMode.') >= -1;\n\n    if (!isOurWarning) {\n      oldConsoleError(...args);\n    }\n  };\n}())\n\nconst dataProdiver = jsonServerProvider('https://jsonplaceholder.typicode.com');\n\nfunction App() {\n  return (\n    <Admin dataProvider={dataProdiver}>\n      <Resource name=\"users\" list={UserList} />\n    </Admin>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}